#pragma once
// autogenerated from sema.hpp.j2

#include <cstddef>
#include <cstdlib>
#include <string>

#include "context.hpp"
{% for node in ast_nodes %}
class {{ node }};
{%- endfor %}

class SemanticAnalyzer {
  CompilerContext cc;

public:
  SemanticAnalyzer(const CompilerContext cc) : cc(cc){};
  void fatalSemaError(const std::string &msg, const size_t sourcePos);
{% for node in ast_nodes %}
  void analyze({{ node }} &astNode);
{%- endfor %}
};
